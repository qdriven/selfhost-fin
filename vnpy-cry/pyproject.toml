[project]
name = "vnpy-cry"
version = "1.0.0"
description = "VNPY based cryptocurrency trading system with TimescaleDB and OKX integration"
authors = [
    {name = "VNPY Crypto Team", email = "admin@vnpy-crypto.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
keywords = ["vnpy", "cryptocurrency", "trading", "timescaledb", "okx"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    # VNPY 核心
    "vnpy>=3.5.0",
    
    # 核心数据处理
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scipy>=1.10.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
    
    # 数据库
    "psycopg2-binary>=2.9.0",
    "redis>=4.5.0",
    "sqlalchemy>=2.0.0",
    
    # 网络和 API
    "requests>=2.31.0",
    "websockets>=11.0",
    "aiohttp>=3.8.0",
    "httpx>=0.24.0",
    
    # 数据处理
    "pytz>=2023.3",
    "python-dateutil>=2.8.2",
    "tzlocal>=5.0",
    
    # 技术分析
    "ta>=0.10.0",
    
    # 配置和日志
    "pyyaml>=6.0",
    "python-dotenv>=1.0.0",
    "loguru>=0.7.0",
    
    # 加密和安全
    "cryptography>=41.0.0",
    
    # 异步支持
    "asyncio-mqtt>=0.16.0",
    
    # 监控和指标
    "prometheus-client>=0.17.0",
    
    # Web 框架
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.23.0",
    
    # 工具库
    "click>=8.1.0",
    "tqdm>=4.65.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]

jupyter = [
    "jupyter>=1.0.0",
    "jupyterlab>=4.0.0",
    "ipywidgets>=8.0.0",
    "notebook>=7.0.0",
]

ml = [
    "scikit-learn>=1.3.0",
    "xgboost>=1.7.0",
    "lightgbm>=4.0.0",
    "optuna>=3.3.0",
]

monitoring = [
    "grafana-api>=1.0.3",
    "prometheus-api-client>=0.5.3",
]

data-collector = [
    "vnpy>=3.5.0",
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "psycopg2-binary>=2.9.0",
    "redis>=4.0.0",
    "requests>=2.26.0",
    "websockets>=10.0",
    "loguru>=0.6.0",
    "python-dotenv>=0.19.0",
]

[project.urls]
Homepage = "https://github.com/vnpy/vnpy-crypto-trader"
Documentation = "https://vnpy-crypto-trader.readthedocs.io/"
Repository = "https://github.com/vnpy/vnpy-crypto-trader.git"
Issues = "https://github.com/vnpy/vnpy-crypto-trader/issues"

[project.scripts]
vnpy-crypto = "vnpy_cry.core.main:main"
vnpy-collector = "vnpy_cry.core.data_collector:main"
vnpy-web = "vnpy_cry.core.web_trader:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatchling.build]
include = [
    "src/vnpy_cry/**/*.py",
    "src/vnpy_cry/**/*.pyi",
]

[tool.hatchling.build.targets.wheel]
packages = ["src/vnpy_cry"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]

[tool.uv.sources]
# 如果需要从特定源安装包，可以在这里配置

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src/vnpy_cry"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 