
services:
  # TimescaleDB - 时间序列数据库
  timescaledb:
    image: timescale/timescaledb:latest-pg17
    container_name: crytata-timescaledb
    restart: unless-stopped
    environment:
      POSTGRES_DB: crytata
      POSTGRES_USER: crytata
      POSTGRES_PASSWORD: crytata_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.UTF-8"
      TIMESCALEDB_TELEMETRY: 'off'
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crytata -d crytata"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: |
      postgres 
      -c shared_preload_libraries=timescaledb
      -c max_connections=200
      -c shared_buffers=1GB
      -c effective_cache_size=4GB
      -c maintenance_work_mem=256MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=16MB

  # Redis - 缓存和消息队列
  redis:
    image: redis:7-alpine
    container_name: crytata-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 2gb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Grafana - 监控面板
  grafana:
    image: grafana/grafana:latest
    container_name: crytata-grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    ports:
      - "3000:3000"
    depends_on:
      timescaledb:
        condition: service_healthy

volumes:
  timescaledb_data:
  redis_data:
  grafana_data: 